import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import { getAsArray, getAsObject, get } from "@parameter1/base-cms-object-path";
import isActiveLink from "@parameter1/base-cms-marko-web-theme-default/components/site-navbar/utils/is-active-link";
import { asArray } from "@parameter1/base-cms-utils";
import { defaultValue } from "@parameter1/base-cms-marko-web/utils";

$ const { site, req, GAM } = out.global;
$ const { id, type, pageNode } = data;


$ const displayPrimaryImage = ["whitepaper", "media-gallery", "video", "event"].includes(type) ? false : true;
$ const displayPublishedDate = ["event", "webinar", "company", "contact"].includes(type) ? false : true;
$ const displayFeatured = ["company", "product", "contact"].includes(type) ? false : true;
$ const displayInquiry = (content) => {
  if (type === "company" && get(content, "enableRmi")) return true;
  if (get(content, "company.enableRmi")) return true;
  return false;
}
$ const displayCompanyImage = ["product", "press-release"].includes(type) ? true : false;
$ const displaySocialShare = ["contact"].includes(type) ? false : true;
$ const displayPhotoswipe = ["contact"].includes(type) ? false : true;

$ const displayCompanyHeader = (content) => {
  const company = get(content, "company");
  if (get(content, "company")) return true;
  return false;
}

$ const hideRailOnContentTypes = site.getAsArray("hideRailOnContentTypes");
$ const restrictedRightRailContentTypes = hideRailOnContentTypes.length ? hideRailOnContentTypes : ["document", "press-release"];
$ const showRightRail = restrictedRightRailContentTypes.includes(type) ? false : true;

<marko-web-content-page-layout id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-gam-targeting key-values={ cont_id: id, cont_type: type } />
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      $ const adSlots = ({ aliases }) => ({
        "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
      });
      <marko-web-gam-slots slots=adSlots({ aliases }) />
      <marko-web-p1-events-track-content node=content />
    </marko-web-resolve-page>
  </@head>

  <@page>

    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>

    <if(displayCompanyHeader(content))>
      <marko-web-page-wrapper modifiers=["shadow"] class="mb-block">
        <@section>
          <global-company-header-block company=content.company />
        </@section>
      </marko-web-page-wrapper>
    </if>
    <else>
      <marko-web-gam-display-ad id="gpt-ad-lb1"  class="mt-block" modifiers=["top-of-page", "max-width-790", "center"] />
    </else>

      $ const images = getAsArray(content, 'images.edges').map(({ node }) => node);
      $ const aliases = hierarchyAliases(content.primarySection);
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <default-theme-page-contents|{ blockName }|
              class="col-lg-8 mb-3 mb-lg-0"
              modifiers=[type]
              attrs={ "data-gallery-id": id }
            >
              <marko-web-element name="content-header" block-name=blockName>
                <default-theme-page-dates|{ blockName }|>
                  <if(type === "event")>
                    <marko-web-content-start-date
                      class=`${blockName}__event-day`
                      format="dddd"
                      obj=content
                    />
                  </if>
                  <else>
                    <marko-web-element tag="span" name="content-type" block-name=blockName>
                      ${content.typeTitled}
                    </marko-web-element>
                  </else>
                  <if(content.type === "event")>
                    <div class=`${blockName}__content-event-times`>
                      <marko-web-content-start-date tag="span" format="h:mm a" block-name=blockName obj=content />
                      <marko-web-content-end-date tag="span" format="h:mm a" block-name=blockName obj=content />
                      <span> (CDT) </span>
                      <marko-web-content-start-date tag="span" format="MMM D, YYYY" block-name=blockName obj=content />
                    </div>
                  </if>
                  <if(content.type === "webinar")>
                    <marko-web-content-start-date block-name=blockName obj=content />
                  </if>
                  <if(displayPublishedDate)>
                    <marko-web-content-published block-name=blockName obj=content />
                  </if>
                </default-theme-page-dates>

                <hr class="page-wrapper__above-title">
                <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
                <default-theme-content-attribution obj=content />
                <hr>
              </marko-web-element>

              <if(displaySocialShare)>
                <marko-web-social-sharing
                  path=content.siteContext.path
                  providers=["facebook", "twitter", "pinterest", "linkedin", "email"]
                />
              </if>

              <if(content.embedCode)>
                <marko-web-content-embed-code block-name=blockName obj=content />
              </if>
              <else-if(type === "media-gallery")>
                <if(images.length)>
                  <div class="page-contents__images">
                    <for|image, index| of=images>
                      <div id=`image-${image.id}`>
                        <theme-primary-image-block block-name="gallery-image" obj=image />
                      </div>
                    </for>
                  </div>
                </if>
              </else-if>

              <else-if(displayPrimaryImage)>
                <marko-web-page-image
                  obj=content.primaryImage
                  modifiers=["fluid-16by9"]
                  options={ w: 700, h: 394, fit: "crop" }
                />
              </else-if>

              $ const bodyId = `content-body-${id}`;
              <marko-web-content-body block-name=blockName obj=content attrs={ id: bodyId } />

              <marko-web-content-sidebars block-name=blockName obj=content />
            </default-theme-page-contents>
          </div>
        </@section>

      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
</marko-web-content-page-layout>
