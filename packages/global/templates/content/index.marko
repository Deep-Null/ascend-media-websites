import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import { getAsArray, getAsObject, get } from "@parameter1/base-cms-object-path";
import isActiveLink from "@parameter1/base-cms-marko-web-theme-default/components/site-navbar/utils/is-active-link";
import { asArray } from "@parameter1/base-cms-utils";

$ const { site, req, GAM } = out.global;
$ const { id, type, pageNode } = data;


$ const displayPrimaryImage = ["whitepaper", "media-gallery", "video", "event"].includes(type) ? false : true;
$ const displayPublishedDate = ["event", "webinar", "company", "contact"].includes(type) ? false : true;
$ const displayFeatured = ["company", "product", "contact"].includes(type) ? false : true;
$ const displayInquiry = (content) => {
  if (type === "company" && get(content, "enableRmi")) return true;
  if (get(content, "company.enableRmi")) return true;
  return false;
}
$ const displayCompanyImage = ["product", "press-release"].includes(type) ? true : false;
$ const displaySocialShare = ["contact"].includes(type) ? false : true;
$ const displayPhotoswipe = ["contact"].includes(type) ? false : true;

$ const displayCompanyHeader = (content) => {
  const company = get(content, "company");
  if (get(content, "company")) return true;
  return false;
}

$ const showRightRail = (site.get("restrictRightRailDisplay") && ["document", "press-release"].includes(type)) ? false : true;

<marko-web-content-page-layout id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-gam-targeting key-values={ cont_id: id, cont_type: type } />
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      $ const adSlots = ({ aliases }) => ({
        "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
      });
      <marko-web-gam-slots slots=adSlots({ aliases }) />
      <marko-web-p1-events-track-content node=content />
    </marko-web-resolve-page>
  </@head>

  <@page>

    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>

    <if(displayCompanyHeader(content))>
      <marko-web-page-wrapper modifiers=["shadow"] class="mb-block">
        <@section>
          <global-company-header-block company=content.company />
        </@section>
      </marko-web-page-wrapper>
    </if>
    <else>
      <marko-web-gam-display-ad id="gpt-ad-lb1"  class="mt-block" modifiers=["top-of-page", "max-width-790", "center"] />
    </else>


      $ const aliases = hierarchyAliases(content.primarySection);
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <default-theme-page-contents|{ blockName }|
              class="col-lg-8 mb-3 mb-lg-0"
              modifiers=[type]
              attrs={ "data-gallery-id": id }
            >
              <marko-web-element name="content-header" block-name=blockName>
                <default-theme-page-dates|{ blockName }|>
                  <if(type === "event")>
                    <marko-web-content-start-date
                      class=`${blockName}__event-day`
                      format="dddd"
                      obj=content
                    />
                  </if>
                  <else>
                    <marko-web-element tag="span" name="content-type" block-name=blockName>
                      ${content.typeTitled}
                    </marko-web-element>
                  </else>
                  <if(content.type === "event")>
                    <div class=`${blockName}__content-event-times`>
                      <marko-web-content-start-date tag="span" format="h:mm a" block-name=blockName obj=content />
                      <marko-web-content-end-date tag="span" format="h:mm a" block-name=blockName obj=content />
                      <span> (CDT) </span>
                      <marko-web-content-start-date tag="span" format="MMM D, YYYY" block-name=blockName obj=content />
                    </div>
                  </if>
                  <if(content.type === "webinar")>
                    <marko-web-content-start-date block-name=blockName obj=content />
                  </if>
                  <if(displayPublishedDate)>
                    <marko-web-content-published block-name=blockName obj=content />
                  </if>
                </default-theme-page-dates>

                <hr class="page-wrapper__above-title">
                <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
                <default-theme-content-attribution obj=content />
                <hr>
              </marko-web-element>

              <if(displaySocialShare)>
                <marko-web-social-sharing
                  path=content.siteContext.path
                  providers=["facebook", "twitter", "pinterest", "linkedin", "email"]
                />
              </if>

              <if(content.embedCode)>
                <marko-web-content-embed-code block-name=blockName obj=content />
              </if>
              <else-if(content.type === "whitepaper" || content.type === "document" || type === "company")>
                <marko-web-page-image
                  obj=content.primaryImage
                  modifiers=["primary-image-inline"]
                  fluid=false
                  width=250
                />
              </else-if>
              <else-if(displayPrimaryImage)>
                $ const isLogo = get(content, "primaryImage.isLogo");
                <if(isLogo || type === "contact")>
                  <marko-web-page-image
                    obj=content.primaryImage
                    modifiers=(type === "contact" ? [] : ["primary-image-inline"])
                    fluid=false
                    width=250
                  />
                </if>
                <else>
                  <marko-web-page-image
                    obj=content.primaryImage
                    modifiers=["fluid-16by9"]
                    options={ w: 700, h: 394, fit: "crop" }
                  />
                </else>
              </else-if>
              $ const companyImage = getAsObject(content, "company.primaryImage");
              <if(displayCompanyImage && companyImage.src)>
                <marko-web-link href=get(content, "company.siteContext.path")>
                  <marko-web-page-image
                    obj=companyImage
                    modifiers=["primary-image-inline"]
                    fluid=false
                    width=250
                  />
                </marko-web-link>
              </if>
              <default-theme-content-contact-details obj=content />

              <if(type === "podcast")>
                <marko-web-content-audio class="my-block" block-name=blockName obj=content />
              </if>

              <if(type === "event" && ["2020-program"].includes(get(content, "primarySection.alias")))>
                $ const accessSessionsHref = site.get("blocks.access-sessions.href");
                <if(accessSessionsHref)>
                  <a
                    href=accessSessionsHref
                    target="_blank"
                    class="mt-1 mb-3 btn btn-primary"
                  >
                    Access Sessions
                  </a>
                </if>
              </if>

              $ const bodyId = `content-body-${id}`;
              <marko-web-content-body block-name=blockName obj=content attrs={ id: bodyId } />

              <marko-web-content-sidebars block-name=blockName obj=content />

              <if(type === "document" || type === "whitepaper")>
                <default-theme-content-download obj=content>
                  <@wufoo user-name=site.get("wufoo.userName") />
                  <@link class="btn btn-lg btn-primary" />
                </default-theme-content-download>
              </if>
              <if(type === "webinar")>
                $ const isUpcoming = content.startDate > Date.now();
                <default-theme-content-link-url
                  obj=content
                  label=(isUpcoming ? "Register for Webinar" : "View Webinar")
                  target="_blank"
                />
              </if>
            </default-theme-page-contents>

            <aside class="col-lg-4 page-rail">
              <if(displayInquiry(content))>
                <marko-web-gam-define-display-ad
                  ...GAM.getAdUnit({ name: 'rail1', aliases })
                  class="mb-block"
                />
                <marko-web-node-list collapsible=false>
                  <@header>Request More Information</@header>
                  <@body>
                    <marko-web-inquiry-form content=content with-header=false modifiers=["right-rail"] />
                  </@body>
                </marko-web-node-list>
                <marko-web-gam-define-display-ad
                ...GAM.getAdUnit({ name: 'rail2', aliases })
                  class="mb-block"
                />
              </if>
              <else-if(showRightRail)>
                <global-global-right-rail-block aliases=aliases no-shadow=true />
              </else-if>
            </aside>

            <if(displayPhotoswipe)>
              <marko-web-photoswipe-images images=resolved.getEdgeNodesFor("images")>
                <@props thumbnail-click-selectors=`[data-gallery-id="${id}"] [data-image-id]` />
              </marko-web-photoswipe-images>
            </if>
          </div>
        </@section>

      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
  <if(site.get("contentPageLoadMore"))>
    <@below-page>
      <marko-web-resolve-page|{ resolved, data: content }| node=pageNode>
        $ const section = resolved.getAsObject("primarySection")
        $ const aliases = hierarchyAliases(section);
        $ const loadMoreParams = {
          sectionId: section.id,
          optionName: ["Standard"],
          excludeContentIds: [id],
          limit: 12,
        };
        $ const contentPageLoadMoreSettings = site.get("contentPageLoadMoreSettings");
        $ const enableLoadMore = !getAsArray(contentPageLoadMoreSettings, 'restrictedOn').includes(type);
        $ const header = get(contentPageLoadMoreSettings, "useSectionForHeader") ? `More in ${section.name}` : 'More Content';
        <if(enableLoadMore)>
          <div class="node-list__header--content-load-more">
            <div class="node-list__header">${header}</div>
          </div>
          <marko-web-load-more
              component-name="global-content-card-deck-flow"
              component-input={ aliases, cols: 3, withTeaser: false }
              fragment-name="global-content-list"
              query-name="website-scheduled-content"
              query-params=loadMoreParams
              max-pages=3
              page-input={ for: "content", id }
              attrs={ "aria-label": "load-more", "role": "main" }
          />
        </if>
      </marko-web-resolve-page>
    </@below-page>
  </if>
</marko-web-content-page-layout>
