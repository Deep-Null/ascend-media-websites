import { getAsObject, getAsArray, get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const content = getAsObject(input, "node");
$ const primaryImage = getAsObject(content, "primaryImage");
$ const primarySection = getAsObject(content, "primarySection");

$ const withTeaser = defaultValue(input.withTeaser, true);
$ const withBody = defaultValue(input.withBody, false);
$ const withSection = defaultValue(input.withSection, true);
$ const withAttribution = defaultValue(input.withAttribution, false);
$ const withDates = defaultValue(input.withDates, true);
$ const withPrimarySectionModifier = defaultValue(input.withPrimarySectionModifier, true);

$ const isWebinar = content.type === "webinar";
$ const isPromotion = content.type === "promotion";
$ const isEvent = ["event", "webinar"].includes(content.type);
$ const isUpcoming = content.startDate > Date.now();

$ const aspectRatio = get(input, "image.ar", "3:2");

$ const { linkAttrs } = input;
$ const headerAttributes = {};
$ const modifiers = getAsArray(input, "modifiers");
$ const { alias } = primarySection;

$ if (withSection && alias && withPrimarySectionModifier) {
  headerAttributes['data-section-alias'] = alias;
  modifiers.push(`section-${primarySection.alias}`);
}

$ const imageLink = primaryImage.src ? { href: content.siteContext.path, attrs: linkAttrs } : false;

<marko-web-node
  type=`${content.type}-content`
  image-position=defaultValue(input.imagePosition, "right")
  card=defaultValue(input.card, false)
  flush=defaultValue(input.flush, true)
  full-height=defaultValue(input.fullHeight, false)
  attrs=input.attrs
  modifiers=modifiers
>
  <if(primaryImage.src)>
    <@image
      width=250
      align="top"
      use-placeholder=false
      fluid=false
      ...input.image
      ar=aspectRatio
      src=primaryImage.src
      alt=primaryImage.alt
      is-logo=primaryImage.isLogo
      link=imageLink
    />
  </if>
  <@body>
    <if(withSection)>
      <@header attrs=headerAttributes>
        <@left|{ blockName }|>
          <marko-web-website-section-name block-name=blockName obj=primarySection link=true />
        </@left>
      </@header>
    </if>
    <@title tag="h5" ...input.title>
      <marko-web-content-short-name tag=null obj=content link={ attrs: linkAttrs } />
    </@title>
    <@text|{ blockName }|
      modifiers=["company-details"]
      show=true
    >
      <if(content.boothNumber)>
        <marko-web-block>
          Booth Number ${content.boothNumber}
        </marko-web-block>
      </if>
      <if(content.website)>
        <marko-web-link href=content.website target="_blank" >
          Website
        </marko-web-link>
      </if>
      <!-- <if(content.address1)>
        <div class=`${blockName}__content-company-address`>
          <marko-web-content-address1 tag="span" block-name=blockName obj=content />
        </div>
      </if>
      <if(content.cityStateZip)>
        <div class=`${blockName}__content-company-address`>
          <marko-web-content-city-state-zip tag="span" block-name=blockName obj=content />
        </div>
      </if>  -->
    </@text>
    <@text
      modifiers=["teaser", ...getAsArray(input, "teaser.modifiers").map(mod => `teaser-${mod}`)]
      show=(Boolean(withTeaser && content.teaser))
    >
      <marko-web-content-teaser tag=null obj=content link={ attrs: linkAttrs } />
    </@text>
    <@text
      modifiers=["body"]
      show=(Boolean(withBody && content.body))
    >
      <marko-web-content-body tag=null obj=content />
    </@text>
    <@text modifiers=["attribution"] show=(Boolean(withAttribution))>
      <attribution ...input.attribution content=content />
    </@text>
  </@body>
</marko-web-node>
