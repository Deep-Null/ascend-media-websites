import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import convertAdToContent from "@parameter1/base-cms-marko-web-native-x/utils/convert-ad-to-content";
import queryFragment from "@parameter1/base-cms-marko-web-theme-monorail/graphql/fragments/section-feed-block";

$ const { nativeX: nxConfig, pagination: p } = out.global;
$ const uri = nxConfig.getUri();
$ const placement = nxConfig.getPlacement({ name: "default", aliases: input.aliases });
$ const perPage = 12;
$ const withPagination = defaultValue(input.withPagination, true);
$ const { modifiers } = input;
$ const queryParams = {
  sectionAlias: input.alias,
  requiresImage: false,
  ...input.queryParams,
};

$ const queryParamsWithPagination = {
  ...queryParams,
  limit: perPage,
  skip: p.skip({ perPage }),
  queryFragment
};
<div class="row">
  <div class="col-lg-8">
    <marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParamsWithPagination>
      $ const nodesWithAds = [
        ...nodes.slice(0,3),
        {},
        ...nodes.slice(3,6),
        {},
        ...nodes.slice(6,9),
        {},
        ...nodes.slice(9)
      ];
      $ const nodeList = { innerJustified: false, ...input.nodeList };
      <theme-section-feed-flow
        nodes=nodesWithAds
        header=input.header
        node=input.node
        node-list=nodeList
        display-image=true
        with-section=true
        modifiers=input.modifiers
        native-x={ indexes: [3, 7, 11], name: "default", aliases: input.aliases }
        with-native-x-section=input.withNativeXSection
      />
    </marko-web-query>
    <if(withPagination)>
      <theme-section-feed-block|{ totalCount }| alias=input.alias count-only=true>
        <@query-params ...queryParams />
        <theme-pagination-controls
          per-page=perPage
          total-count=totalCount
          path=input.alias
        />
      </theme-section-feed-block>
    </if>
  </div>
  <div class="col-lg-4">
    <global-most-popular-list-block class="sticky-top" />
  </div>
</div>
