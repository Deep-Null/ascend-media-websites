import { getAsObject, get } from "@parameter1/base-cms-object-path";
import { defaultValue } from "@parameter1/base-cms-marko-web/utils";
import convertAdToContent from "@parameter1/base-cms-marko-web-native-x/utils/convert-ad-to-content";

$ const { nativeX: nxConfig } = out.global;
$ const placementName = defaultValue(input.placementName, "default");
$ const aliases = defaultValue(input.aliases, []);

$ const uri = nxConfig.getUri();
$ const placement = nxConfig.getPlacement({ name: placementName, aliases });

<marko-web-native-x-fetch-elements|{ ads }| uri=uri id=placement.id opts={ n: 1 }>
  $ const nodes = ads.filter(ad => ad.hasCampaign);
  <if(nodes.length)>
    $ const ad = nodes[0]
    $ const content = { 
      ...convertAdToContent(ad, { sectionName: `Sponsored by ${ad.campaign.advertiserName}` }),
      attributes: {
        ...ad.attributes
      },
      ...(input.header && { shortName: input.header })
    }
    $ const primaryImage = getAsObject(content, "primaryImage");
    <marko-web-node
      type=`${content.type}-content`
      image-position="top"
      card=true
      flush=true
      full-height=false
      modifiers=["hero"]
    >
      <@header>
        <@left|{ blockName }|>
          <marko-web-content-short-name 
            obj=content
            block-name=blockName
            link={ href: content.siteContext.path, attrs: getAsObject(content, "attributes.link")}
          />
        </@left>
      </@header>
        <@image
          ar="16:9"
          width="630"
          fluid=true
          use-placeholder=false
          src=primaryImage.src
          alt=primaryImage.alt
          is-logo=primaryImage.isLogo
          link={ href: content.siteContext.path, attrs: getAsObject(content, "attributes.link") }
        >
          <@body>
            <@text modifiers=["teaser"] show=Boolean(content.teaser)>
              <marko-web-content-teaser tag=null obj=content link=true />
            </@text>
          </@body>
        </@image>
    </marko-web-node>
  </if>
</marko-web-native-x-fetch-elements>
