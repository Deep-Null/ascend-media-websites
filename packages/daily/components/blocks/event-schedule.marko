import { getAsObject, get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import queryFragment from "../../graphql/fragments/event-schedule";

$ const queryParams = {
  limit: 4,
  queryFragment,
  includeContentTypes: ["Event"],
  endingAfter: Date.now(),
  sortField: "startDate",
  sortOrder: "asc",
  ...getAsObject(input, "queryParams"),
};

$ const displayEventDay = defaultValue(input.displayEventDay, true);

<marko-web-query|{ nodes }| name="all-published-content" params=queryParams>
  <marko-web-node-list
    inner-justified=false
    flush-x=false
    flush-y=false
    class=input.class
    modifiers=["event-schedule"]
    header=input.header
    footer=input.footer
  >
    <@nodes nodes=nodes>
      <@slot|{ node: content }|>
        $ const primaryImage = getAsObject(content, "primaryImage");

        <if(displayEventDay)>
          <marko-web-content-start-date
            class="node-list__event-day"
            format="dddd"
            obj=content
          />
        </if>

        <marko-web-node
          type=`${content.type}-content`
          image-position="left"
          flush=true
          full-height=false
        >
          <@image
            ar="1:1"
            width="125"
            use-placeholder=false
            src=primaryImage.src
            link={ href: get(content, "siteContext.path") }
          />
          <@body>
            <@title tag="h5">
              <marko-web-content-name tag=null obj=content link=true />
            </@title>
            <@text|{ blockName }|>
              <div class=`${blockName}__content-event-times`>
                <marko-web-content-start-date tag="span" format="h:mm a" block-name=blockName obj=content />
                <marko-web-content-end-date tag="span" format="h:mm a" block-name=blockName obj=content />
                <span> (CDT) </span>
                <marko-web-content-start-date tag="span" format="MMM D, YYYY" block-name=blockName obj=content />
              </div>
            </@text>
            <@text modifiers=["teaser"] show=Boolean(content.teaser)>
              <marko-web-content-teaser tag=null obj=content link=true />
            </@text>
          </@body>
        </marko-web-node>
      </@slot>
    </@nodes>
  </marko-web-node-list>
</marko-web-query>
