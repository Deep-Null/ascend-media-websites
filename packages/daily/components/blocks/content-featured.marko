import { getAsObject, get } from "@parameter1/base-cms-object-path";
import queryFragment from "../../graphql/fragments/content-featured";

$ const { nativeX: nxConfig } = out.global;
$ const { sectionAlias } = input;
$ const nativeX = getAsObject(input, "nativeX");

$ const queryParams = {
  optionName: "Pinned",
  limit: input.limit || 3,
  queryFragment,
  requiresImage: true,
  sectionBubbling: false,
  excludeContentTypes: ["Event"],
  ...getAsObject(input, "queryParams"),
  sectionAlias,
};

<marko-web-query|{ nodes }| name="website-optioned-content" params=queryParams>
  <!-- Native-X here uses base 0 indexing whereas Array.length is defined using base 1 -->
  $ const slotInNativeX = nxConfig.enabled && (nativeX && nativeX.index);
  $ const finalizedNodes =  slotInNativeX ? [
    ...nodes.slice(0, nativeX.index),
    {},
    ...nodes.slice(nativeX.index, nodes.length)
  ] : nodes;
  <marko-web-node-list
    inner-justified=false
    flush-x=false
    flush-y=false
    class=input.class
  >
    <@header>
      Daily News
    </@header>
    <@nodes nodes=finalizedNodes>
      <@slot|{ node, index }|>
        <marko-web-native-x-render|{ node: nxNode, linkAttrs, containerAttrs }|
          ...nativeX
          when=(index === nativeX.index)
          node=node
          config=nxConfig
        >
            $ const primaryImage = getAsObject(nxNode, "primaryImage");
            $ const primarySection = getAsObject(nxNode, "primarySection");
            <marko-web-node
              type=`${nxNode.type}-content`
              image-position="left"
              flush=true
              full-height=false
              attrs=containerAttrs
            >
              <@image
                ar="1:1"
                width="125"
                use-placeholder=false
                src=primaryImage.src
                link={ href: get(nxNode, "siteContext.path"), attrs: linkAttrs }
              />
              <@body>
                <@header>
                  <@left>
                    <marko-web-website-section-name obj=primarySection link=true />
                  </@left>
                </@header>
                <@title tag="h5">
                  <marko-web-content-short-name tag=null obj=nxNode link={ attrs: linkAttrs }/>
                </@title>
                <@text modifiers=["teaser"] show=Boolean(nxNode.teaser)>
                  <marko-web-content-teaser tag=null obj=nxNode link={ attrs: linkAttrs } />
                </@text>
              </@body>
            </marko-web-node>
        </marko-web-native-x-render>
      </@slot>
    </@nodes>
  </marko-web-node-list>
</marko-web-query>
