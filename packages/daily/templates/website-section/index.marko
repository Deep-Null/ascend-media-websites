import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import queryFragment from "../../graphql/fragments/content-list";

$ const { GAM } = out.global;

$ const {
  id,
  alias,
  name,
  pageNode,
} = input;

$ const adSlots = ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
});

<marko-web-website-section-page-layout id=id alias=alias name=name attrs={"aria-label": `website-section-${id}`}>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-slots slots=adSlots({ aliases }) />
    </marko-web-resolve-page>
  </@head>

  <@page>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page", "max-width-790", "center"] />

    <daily-content-hero-block section-id=id />

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: id, optionName: "Pinned", limit: 16, skip: 4, requiresImage: true, queryFragment }
    >
      <daily-content-card-deck-flow nodes=nodes cols=3 ad-index=4 ad-name="rail1" />
    </marko-web-query>
  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="daily-content-card-deck-flow"
        component-input={ aliases }
        fragment-name="daily-content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 12, skip: 20, requiresImage: true }
        max-pages=3
        page-input={ for: "website-section", id }
        attrs={ "aria-label": "load-more", "role": "main" }
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-website-section-page-layout>
