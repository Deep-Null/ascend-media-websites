import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";
import latestIssueFragment from "../graphql/fragments/magazine-latest-issue";
import GAM from "../../config/gam";
import nxConfig from "../../config/native-x";

$ const { site, config } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name attrs={"aria-label": `website-section-${id}`}>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
        "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases }),
        "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases }),
      };
      <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["above-container"] />
  </@above-container>
  <@page>
    <marko-web-query|{ nodes }|
      name="all-published-content"
      params={ limit: 1, requiresImage: true, queryFragment }
    >
      <!-- <website-content-hero-flow nodes=nodes /> -->
      <marko-web-block name="hero-flow">
        <marko-web-element name="hero" block-name="hero-flow">
          <website-content-card-node node=nodes[0] image-width=630 title-modifiers=["large"] />
        </marko-web-element>
        <marko-web-element name="list" block-name="hero-flow">
          <minexpo-directory-categories-block aliases=[] title="Search Exhibitors By Category" description="Select a category below to view exhibitors within the selected category." />
        </marko-web-element>
      </marko-web-block>

    </marko-web-query>

    <div class="row">
      <div class="col">
        <marko-web-query|{ nodes }|
          name="all-published-content"
          params={ limit: 5, skip: 1, requiresImage: true, queryFragment }
        >
          <default-theme-card-deck-flow cols=3 nodes=nodes>
            <@slot|{ node, index }|>
              <website-content-card-node
                image-width=340
                node=node
              />
            </@slot>
            <@slot position="after" index=1>
              <marko-web-gam-display-ad id="gpt-ad-rail1" modifiers=["in-card"] />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
    </div>
    <div class="row">
      <div class="col mb-block">
        <minexpo-leaders-home-page media-query-columns=3 expanded=false />
      </div>
    </div>
    <div class="row">
      <div class="col-lg-4 col-md-6 mb-block">
        <marko-web-gam-display-ad id="gpt-ad-rail2" />
      </div>
      <div class="col-lg-8 col-md-6 mb-block">
        <marko-web-query|{ nodes }|
          name="all-published-content"
          params={ limit: 4, skip: 6, requiresImage: true, queryFragment }
        >
        <default-theme-card-deck-flow cols=2 nodes=nodes>
          <@slot|{ node, index }|>
            <website-content-card-node
              image-width=340
              node=node
            />
          </@slot>
        </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <marko-web-query|{ nodes }|
          name="all-published-content"
          params={ limit: 12, skip: 10, requiresImage: true, queryFragment }
        >
          <default-theme-card-deck-flow cols=3 nodes=nodes>
            <@slot|{ node, index }|>
              <website-content-card-node
                image-width=340
                node=node
              />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
    </div>

  </@page>

</marko-web-website-section-page-layout>
