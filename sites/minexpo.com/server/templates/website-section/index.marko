import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import hierarchyIds from "@parameter1/base-cms-marko-web/utils/hierarchy-ids";
import queryFragment from "../../graphql/fragments/content-list";
import GAM from "../../../config/gam";

$ const { site } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
        "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases }),
        "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases }),
        "gpt-ad-rail3": GAM.getAdUnit({ name: "rail3", aliases }),
        "gpt-ad-rail4": GAM.getAdUnit({ name: "rail4", aliases }),
      };
      <marko-web-gam-slots slots=adSlots />
      <marko-web-gam-targeting
        key-values={
          currentCategoryId: id,
          superCategoryIds: hierarchyIds(section).filter(sectionId => sectionId !== id)
        }
      />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["above-container"] />
  </@above-container>
  <@page>
    <marko-web-query|{ nodes }|
      name="website-scheduled-content"
      params={ sectionId: id, limit: 5, requiresImage: true, queryFragment }
    >
      <website-content-hero-flow nodes=nodes />
    </marko-web-query>

    <marko-web-query|{ nodes }|
      name="website-scheduled-content"
      params={ sectionId: id, limit: 2, skip: 5, requiresImage: true, queryFragment }
    >
      <default-theme-card-deck-flow cols=3 nodes=nodes>
        <@slot|{ node, index }|>
          <website-content-card-node
            image-width=340
            node=node
          />
        </@slot>
        <@slot position="after" index=1>
          <marko-web-gam-display-ad id="gpt-ad-rail1" modifiers=["in-card"] />
        </@slot>
      </default-theme-card-deck-flow>
    </marko-web-query>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <common-leaders-home-page />
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ limit: 1, skip: 7, requiresImage: true, queryFragment }
        >
          <website-content-card-node
            image-width=340
            node=nodes[0]
          />
        </marko-web-query>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-4 col-md-6 mb-block">
        <marko-web-gam-display-ad id="gpt-ad-rail2" />
      </div>
      <div class="col-lg-8 col-md-6 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ limit: 4, skip: 8, requiresImage: true, queryFragment }
        >
        <default-theme-card-deck-flow cols=2 nodes=nodes>
          <@slot|{ node, index }|>
            <website-content-card-node
              image-width=340
              node=node
            />
          </@slot>
        </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
    </div>

    <marko-web-query|{ nodes }|
      name="website-scheduled-content"
      params={ sectionId: id, limit: 16, skip: 12, requiresImage: true, queryFragment }
    >
      <default-theme-card-deck-flow cols=3 nodes=nodes>
        <@slot|{ node, index }|>
          <website-content-card-node
            image-width=340
            node=node
          />
        </@slot>
        <@slot position="after" index=1>
          <marko-web-gam-display-ad id="gpt-ad-rail3" modifiers=["in-card"] />
        </@slot>
        <@slot position="after" index=9>
          <marko-web-gam-display-ad id="gpt-ad-rail4" modifiers=["in-card"] />
        </@slot>
      </default-theme-card-deck-flow>
    </marko-web-query>

  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 12, skip: 28, requiresImage: true }
        max-pages=3
        page-input={ for: "website-section", id }
      attrs={ "aria-label": "load-more", "role": "main" }
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-website-section-page-layout>
